//import sekcija

import java_cup.runtime.*;
import java.io.*;

parser code {:
   public static void main( String[] args )
   {
      try
	  {
		   FileReader file = new FileReader( args[0] );
		   Scanner scanner = new MPLexer( file );
		   MPParser parser = new MPParser( scanner );
		   parser.parse();
	  }
	  catch( Exception e )
	  {
		   e.printStackTrace();
	  }
   }
:};

//Terminali
terminal MAIN, EXIT, ID, INT, FLOAT, BOOL, ASSIGN, SEMICOLON, PLUS, MINUS, CONST;
terminal FOR, IN, OPENSQUARE, CLOSEDSQUARE, APPLY, TRUE, FALSE, COMM, COLON, COMMA;


// Neterminali
non terminal Program, Block, Declarations, Declaration, Type, Expressions, NameList;
non terminal Expression, Assignment, ArithmeticExpression, TermExpression, ApplyExpression;

// Gramatika

//PROGRAM**********************************************************


Program ::= MAIN Block EXIT
{:
    System.out.println( "Redukcija po smeni 1." );
:};


//BLOK**********************************************************


Block ::= Declarations Expressions
{:
    System.out.println( "Redukcija po smeni 2." );
:};


//DEKLARACIJA**********************************************************


Declarations ::= Declarations Declaration
{:
    System.out.println( "Redukcija po smeni 3." );
:}
| Declaration
{:
    System.out.println( "Redukcija po smeni 4." );
:}
;

Declaration ::= Type ID SEMICOLON
{:
    System.out.println( "Redukcija po smeni 5." );
:}
;

//TIP**********************************************************




Type ::= INT
{:
    System.out.println( "Redukcija po smeni 6." );
:}
| FLOAT
{:
    System.out.println( "Redukcija po smeni 7." );
:}
| BOOL
{:
    System.out.println( "Redukcija po smeni 8." );
:};


//EXPRESSIONS**********************************************************


Expressions ::= Expressions SEMICOLON Expression 
{:
    System.out.println( "Redukcija po smeni 9." );
:}
| Expression
{:
    System.out.println( "Redukcija po smeni 10." );
:};

Expression ::= Assignment
{:
    System.out.println( "Redukcija po smeni 11." );
:}
| ApplyExpression
{:
    System.out.println( "Redukcija po smeni 12." );
:};


//ASSIGNMENT**********************************************************


Assignment ::= ID ASSIGN ArithmeticExpression
{:
    System.out.println( "Redukcija po smeni 13." );
:};


//ARITHMETIC**********************************************************


ArithmeticExpression ::= ArithmeticExpression PLUS TermExpression
{:
    System.out.println( "Redukcija po smeni 14." );
:}
| ArithmeticExpression MINUS TermExpression
{:
    System.out.println( "Redukcija po smeni 15." );
:}
| TermExpression
{:
    System.out.println( "Redukcija po smeni 16." );
:};

TermExpression ::= CONST 
{:
    System.out.println( "Redukcija po smeni 17." );
:}
| ID
{:
    System.out.println( "Redukcija po smeni 18." );
:};

//APPLY**********************************************************


ApplyExpression ::= FOR ID IN OPENSQUARE NameList CLOSEDSQUARE APPLY Expression
{:
    System.out.println( "Redukcija po smeni 19." );
:};

//NAMELIST**********************************************************


NameList ::= NameList COMMA ID
{:
    System.out.println( "Redukcija po smeni 20." );
:}
| ID
{:
    System.out.println( "Redukcija po smeni 21." );
:};
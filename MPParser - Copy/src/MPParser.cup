//import sekcija

import java_cup.runtime.*;
import java.io.*;

parser code {:
   public static void main( String[] args )
   {
      try
	  {
		   FileReader file = new FileReader( args[0] );
		   Scanner scanner = new MPLexer( file );
		   MPParser parser = new MPParser( scanner );
		   parser.parse();
	  }
	  catch( Exception e )
	  {
		   e.printStackTrace();
	  }
   }
:};


//Terminali
terminal MAIN, INT, CHAR, FLOAT, BOOL, LOOP, REDO, CURLYPARRIGHT, CURLYPARLEFT, RIGHTPAR, AND, OR;
terminal LEFTPAR, ASSIGN, COMMA, SEMI, ID, LESS, LESSEQUAL, MORE, MOREEQUAL, NOTEQUAL, EQUAL, CONST;

//Neterminali
non terminal Program, Block, Declarations, VarDecl, NameList, Type, StatementList;
non terminal Statement, RedoLoop, Expression, AndExpression, RelExpression, RelOp, Term;

//Precedences added by Eclipse plugin
precedence nonassoc ID;	// Inserted by Eclipse plugin


//Gramatika

Program ::= MAIN LEFTPAR RIGHTPAR Block
{:
               System.out.println( "Redukcija po smeni 1." );
            :};
Block ::= CURLYPARLEFT Declarations StatementList CURLYPARRIGHT
{:
               System.out.println( "Redukcija po smeni 2." );
            :};
Declarations ::= Declarations VarDecl
{:
               System.out.println( "Redukcija po smeni 3." );
            :}
			| 
			{:
               System.out.println( "Redukcija po smeni 4." );
            :};
VarDecl ::= Type NameList SEMI
{:
               System.out.println( "Redukcija po smeni 5." );
            :};
NameList ::= ID 
			{:
               System.out.println( "Redukcija po smeni 6." );
            :}
            |
            NameList COMMA ID
{:
               System.out.println( "Redukcija po smeni 7." );
            :};
Type ::= INT 
{:
               System.out.println( "Redukcija po smeni 8." );
            :}
            | CHAR
            {:
               System.out.println( "Redukcija po smeni 9." );
            :}
             | FLOAT 
             {:
               System.out.println( "Redukcija po smeni 10." );
            :}
            | BOOL
{:
               System.out.println( "Redukcija po smeni 11." );
            :};
StatementList ::= StatementList Statement 
{:
               System.out.println( "Redukcija po smeni 12." );
            :}
            | Statement
{:
               System.out.println( "Redukcija po smeni 13." );
            :};
Statement ::= RedoLoop 
{:
               System.out.println( "Redukcija po smeni 14." );
            :}
            | ID ASSIGN Expression SEMI 
            {:
               System.out.println( "Redukcija po smeni 15." );
            :}
            | Block
{:
               System.out.println( "Redukcija po smeni 16." );
            :};
RedoLoop ::= LOOP LEFTPAR Expression RIGHTPAR CURLYPARLEFT Statement REDO LEFTPAR Expression RIGHTPAR SEMI Statement CURLYPARRIGHT
{:
               System.out.println( "Redukcija po smeni 17." );
            :};
Expression ::= Expression OR AndExpression 
{:
               System.out.println( "Redukcija po smeni 18." );
            :}
            | AndExpression
{:
               System.out.println( "Redukcija po smeni 19." );
            :};
AndExpression ::= AndExpression AND RelExpression 
{:
               System.out.println( "Redukcija po smeni 20." );
            :}
            | RelExpression
{:
               System.out.println( "Redukcija po smeni 21." );
            :};
RelExpression ::= Term RelOp Term 
{:
               System.out.println( "Redukcija po smeni 22." );
            :}
            | Term
{:
               System.out.println( "Redukcija po smeni 23." );
            :};
RelOp ::= LESS 
{:
               System.out.println( "Redukcija po smeni 24." );
            :}
            | LESSEQUAL
            {:
               System.out.println( "Redukcija po smeni 25." );
            :} 
            | EQUAL 
            {:
               System.out.println( "Redukcija po smeni 26." );
            :}
            | NOTEQUAL
            {:
               System.out.println( "Redukcija po smeni 27." );
            :} 
            | MORE 
            {:
               System.out.println( "Redukcija po smeni 28." );
            :}
            | MOREEQUAL
{:
               System.out.println( "Redukcija po smeni 29." );
            :};
Term ::= ID 
{:
               System.out.println( "Redukcija po smeni 30." );
            :}
            | CONST 
            {:
               System.out.println( "Redukcija po smeni 31." );
            :}
            | LEFTPAR Expression RIGHTPAR
{:
               System.out.println( "Redukcija po smeni 32." );
            :};

	





